name: build_binary

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "Cargo.**"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: "Cache builder image"
        id: cache-builder-image
        uses: actions/cache@v2
        with:
          path: musl-builder-image
          key: musl-builder-image
      - name: "Pull and save builder image"
        if: steps.cache-builder-image.outputs.cache-hit != 'true'
        run: |
          docker pull ekidd/rust-musl-builder:stable
          docker save ekidd/rust-musl-builder:stable -o musl-builder-image
      - name: "Load builder image"
        run: docker load -i musl-builder-image
      - name: "Cache Rust"
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: "Build binary"
        run: docker run --rm -u root -v `pwd`:/home/rust/src ekidd/rust-musl-builder:stable cargo build --release
      - name: "Upload binary"
        uses: actions/upload-artifact@v2
        with:
          name: gh-trs
          path: target/x86_64-unknown-linux-musl/release/gh-trs
